//
//  SearchViewPresenter.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 07.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

class SearchViewPresenter {

    // MARK: - Private properties -
    private unowned let view: SearchViewViewInterface
    private let interactor: SearchViewInteractorInterface
    private let wireframe: SearchViewWireframeInterface
    var info: [User]?

    // MARK: - Lifecycle -

    init(view: SearchViewViewInterface,
         interactor: SearchViewInteractorInterface,
         wireframe: SearchViewWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension SearchViewPresenter: SearchViewPresenterInterface {
    func viewReloaded() {
        interactor.getAllUsers()
    }

    func recievedUsers(users: [User]) {
        info = users
        view.updateUsers(users: users)
    }

    func clickedUser(with uuid: String, isFollowing: Bool) {
        interactor.followUser(isFollowing: isFollowing, fromCurrentUserTo: uuid)
    }

    func clickedUserName(with uuid: String) {
        wireframe.transitionToProfile(with: uuid)
    }

    func cellLoaded(with uuid: String, completion: @escaping (String, Bool) -> Void) {
        interactor.getUserInfo(with: uuid, completion: { (image, isFollowed) in
            completion(image, isFollowed)
        })
    }
}
