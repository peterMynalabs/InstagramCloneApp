//
//  ProfileScreenPresenter.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 07.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

class ProfileScreenPresenter: EditProfileDelegate {

    // MARK: - Private properties -

    private unowned let view: ProfileScreenViewInterface
    private let interactor: ProfileScreenInteractorInterface
    private let wireframe: ProfileScreenWireframeInterface
    var profileImageURL: String?
    var uuid = ""
    var isEditHidden = true
    var postList: [Post]?
    var currentUser: User?
    var numberOfPosts: Int?

    // MARK: - Lifecycle -
    init(view: ProfileScreenViewInterface,
         interactor: ProfileScreenInteractorInterface,
         wireframe: ProfileScreenWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension ProfileScreenPresenter: ProfileScreenPresenterInterface {

    func buttonLoaded(completion: @escaping (Bool) -> Void) {
        interactor.checkIfFollowing(with: uuid, completion: { (isFollowed) in
            completion(isFollowed)
        })
    }

    func pressedEdit() {
        wireframe.routeToEdit(delegate: self, image: profileImageURL ?? "")
    }

    func pressedFollow(isFollowing: Bool, username: String) {
        interactor.setFollowing(isFollowing: isFollowing, username: username)
    }

    func headerViewExists() {
        interactor.getUserInformation(with: uuid)
        interactor.getProfilePhoto(with: uuid)
        interactor.getUserStatistics(with: uuid)
    }

    func viewDidLoad() {
        guard let user = User.current  else {
            return
        }
        if uuid == "" {
            uuid = user.uid
            isEditHidden = false
        } else if uuid == user.uid {
            isEditHidden = false
        }
        interactor.getUserPosts(with: uuid)
    }

    func viewReloaded() {
        interactor.getUserPosts(with: uuid)
        interactor.getUserStatistics(with: uuid)
    }

    func recievedPosts(posts: [Post]) {
        postList = posts
        view.updatePosts()
    }

    func recievedUserInformation(info: UserInformation) {
        view.updateProfileForm(info: info)
        view.setupEditProfileButton()
    }

    func recieveUserStatistics(statistics: UserStatistics) {
        self.view.setupUserStatisticView(with: statistics)
    }

    func recievedProfileImage(with imageURL: String) {
        if profileImageURL != imageURL {
            view.setupProfilePhoto(with: imageURL)
            profileImageURL = imageURL
        }
    }

    func selectedMenuItem(with selection: Menu) {
        switch selection {
        case .settings:
            wireframe.routeToSettings()
        default:
            print(selection.rawValue)
        }
    }
}

extension ProfileScreenPresenter: EditProfileItemDelegate {
    func recieveNewData(updatedUserInformation: UserInformation) {
        view.updateProfileForm(info: updatedUserInformation)
    }
}
