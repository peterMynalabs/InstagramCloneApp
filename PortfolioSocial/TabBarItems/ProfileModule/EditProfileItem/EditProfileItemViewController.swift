//
//  EditProfileItemViewController.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 26.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

class EditProfileItemViewController: UIViewController {

    // MARK: - Public properties -
    weak var delegate: EditProfileItemDelegate?
    var presenter: EditProfileItemPresenterInterface!

    private let maxHeight: CGFloat = 100
    private let minHeight: CGFloat = 50
    // MARK: - Lifecycle -
    var textView = TextView()

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        setupTextView()
        presenter.viewLoaded()
        setupNavigationBar()
    }

    func setupNavigationBar() {
        navigationItem.leftBarButtonItem = UIBarButtonItem(title: NSLocalizedString("Cancel", comment: "Cancel"),
                                                           style: .plain,
                                                           target: self,
                                                           action: #selector(pressCancel))
        navigationItem.rightBarButtonItem = UIBarButtonItem(title: NSLocalizedString("Done", comment: "Done"),
                                                            style: .plain,
                                                            target: self,
                                                            action: #selector(pressDone))
    }

    func setupTextView() {
        textView.frame = view.frame
        if UIDevice.current.hasNotch {
            textView.frame.origin = CGPoint(x: 0, y: (navigationController?.navigationBar.frame.height)!)
        }
        view.addSubview(textView)
    }

    @objc func pressCancel() {
        presenter.pressedCancel()
    }

    @objc func pressDone() {
        presenter.pressedDone(with: textView.textView.text!)
    }
}
// MARK: - Extensions -

extension EditProfileItemViewController: EditProfileItemViewInterface {

    func setCurrentInformation(labelText: String, information: String, count: Int) {
        let navHeight = (navigationController?.navigationBar.frame.height)!
        textView.setInformation(labelText: labelText,
                                information: information,
                                count: count,
                                navigationBarHeight: Int(navHeight))
    }

    func setChangeUserName(username: String, count: Int) {
        setCurrentInformation(labelText: "Username", information: username, count: count)
    }
}
