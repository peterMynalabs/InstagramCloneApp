//
//  EditProfileViewController.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 22.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit


final class EditProfileViewController: UIViewController {
    // MARK: - Public properties -
    var presenter: EditProfilePresenterInterface!
    var profileView: InteractableProfilePhoto?
    var profileInformationForm: ProfileInformationForm?
    var scalingForKeyboard: CGFloat = 0.0
    var userInformation: UserInformation?
    var updatedInformation: UserInformation?

    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        setupFrames()
        addGestureRecognizers()
        view.addSubview(profileView!)
        view.addSubview(changeProfilePhotoButton)
        view.addSubview(profileInformationForm!)
        view.addSubview(SeperatorLineView(frame: CGRect(x: 0, y: changeProfilePhotoButton.frame.maxY + 20, width: view.frame.width, height: 1)))
        setupNavigationBar()
    }
    
    override func viewDidAppear(_ animated: Bool) {
       
    }
    
    func setupNavigationBar() {
        navigationItem.leftBarButtonItem = UIBarButtonItem(title: NSLocalizedString("Cancel", comment: "Cancel"), style: .plain, target: self, action: #selector(pressCancel))
        navigationItem.rightBarButtonItem = UIBarButtonItem(title: NSLocalizedString("Done", comment: "Done"), style: .plain, target: self, action: #selector(pressDone))
    }
    
    var changeProfilePhotoButton: UIButton = {
        var button = UIButton()
        button.setTitle("Change Profile Photo", for: .normal)
        button.titleLabel?.textAlignment = .center
        button.titleLabel?.font = UIFont.boldSystemFont(ofSize: 13)
        button.setTitleColor(UIColor(rgb: 0x0498FC), for: .normal)
        button.addTarget(self, action: #selector(onPressProfile), for: .touchDown)
        return button
    }()
    
    func setupFrames() {
        profileView = InteractableProfilePhoto(frame: CGRect(x: (view.frame.width - 75) / 2, y: 90, width: 75, height: 75))
        changeProfilePhotoButton.frame = CGRect(x: 0, y: (profileView?.frame.maxY)! + 20, width: self.view.frame.width, height: 10)
        profileInformationForm = ProfileInformationForm(frame: CGRect(x: 0, y: changeProfilePhotoButton.frame.maxY + 22, width: view.frame.width, height: 190), userInformation: userInformation!)
    }
    
    func addGestureRecognizers() {
        for i in 0...profileInformationForm!.listOfTextLabels.count - 1 {
            profileInformationForm?.listOfTextLabels[i].isUserInteractionEnabled = true
            let pressGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(EditProfileViewController.handleTap(sender:)))
            profileInformationForm?.listOfTextLabels[i].addGestureRecognizer(pressGestureRecognizer)
        }
    }
    
    @objc func onPressProfile() {
        view.backgroundColor = .red
    }
    
    @objc func handleTap(sender: UITapGestureRecognizer) {
        if sender.state == .ended {
            if let label = sender.view as? UILabel {
                let formItem = FormItems(rawValue: (label.text ?? ""))
                presenter.pressedOn(label: formItem ?? FormItems.nothing, userInformation: userInformation!)
            }
        }
    }
 
    
    @objc func pressCancel() {
        presenter.pressedCancel()
    }
    
    @objc func pressDone() {
        presenter.pressedDone(info: userInformation!)
    }


}

// MARK: - Extensions -

extension EditProfileViewController: EditProfileViewInterface {
    func updateProfileForm(info: UserInformation) {
        profileInformationForm!.updateTitles(info: info)
        updatedInformation = info
        userInformation = info
    }
}




