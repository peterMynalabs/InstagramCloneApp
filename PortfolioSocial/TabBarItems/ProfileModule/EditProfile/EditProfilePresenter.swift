//
//  EditProfilePresenter.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 22.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

protocol EditProfileDelegate: AnyObject {
    func recieveNewData(updatedUserInformation: UserInformation)
}


class EditProfilePresenter {
    
    // MARK: - Private properties -
    
    private unowned let view: EditProfileViewInterface
    private let interactor: EditProfileInteractorInterface
    private let wireframe: EditProfileWireframeInterface
    var delegate: EditProfileDelegate?
    var userInformation: UserInformation?
    
    // MARK: - Lifecycle -
    
    init(view: EditProfileViewInterface, interactor: EditProfileInteractorInterface, wireframe: EditProfileWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension EditProfilePresenter: EditProfilePresenterInterface {
    func pressedDone() {
        interactor.updateUsersInformation(info: userInformation!)
        view.removeAllViews()
        delegate?.recieveNewData(updatedUserInformation: userInformation!)
    }
    
    func viewLoaded() {
        interactor.getUserInformation()
    }
    
    func pressedCancel() {
        wireframe.viewDisappeared()
    }
   
    func recievedInformation(info: UserInformation){
        view.addProfileInformationForm(userInformation: info)
        view.updateProfileForm(info: info)
        userInformation = info
    }
    
    func viewDisappeared() {
        wireframe.viewDisappeared()
    }
    
    func pressedOn(label item: FormItems) {
        wireframe.routeToEditProfileItem(with: item, userInformation: userInformation!, delegate: self)
    }
    func updateProfilePhoto(image: NSObject) {
        interactor.updateProfilePhoto(image: image)
    }
}

extension EditProfilePresenter: EditProfileItemDelegate {
    func recieveNewData(updatedUserInformation: UserInformation) {
        userInformation = updatedUserInformation
        view.updateProfileForm(info: updatedUserInformation)
    }
}
