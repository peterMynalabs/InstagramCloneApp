//
//  EditProfilePresenter.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 22.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

protocol EditProfileDelegate: AnyObject {
    func recieveNewData(updatedUserInformation: UserInformation)
}


final class EditProfilePresenter {
    
    // MARK: - Private properties -
    
    private unowned let view: EditProfileViewInterface
    private let interactor: EditProfileInteractorInterface
    private let wireframe: EditProfileWireframeInterface
    var delegate: EditProfileDelegate?
    
    // MARK: - Lifecycle -
    
    init(view: EditProfileViewInterface, interactor: EditProfileInteractorInterface, wireframe: EditProfileWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension EditProfilePresenter: EditProfilePresenterInterface {
    func pressedDone(info: UserInformation) {
        interactor.updateUsersInformation(info: info)
        delegate?.recieveNewData(updatedUserInformation: info)
        wireframe.viewDisappeared()
    }
    
    func pressedCancel() {
        wireframe.viewDisappeared()
    }
    
    func pressedOn(label item: FormItems, userInformation: UserInformation) {
        wireframe.routeToEditProfileItem(with: item, userInformation: userInformation, delegate: self)
    }
}

extension EditProfilePresenter: EditProfileItemDelegate {
    func recieveNewData(updatedUserInformation: UserInformation) {
        view.updateProfileForm(info: updatedUserInformation)
        
    }
    
    
}
