//
//  ProfileSettingsViewController.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 2/12/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

class ProfileSettingsViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: ProfileSettingsPresenterInterface!
    let cellReuseIdentifier = "cell"
    let tableView = UITableView()
    var scrollView = UIScrollView()

    // MARK: - Lifecycle -

    func setupTableView() {
        self.tableView.register(UITableViewCell.self, forCellReuseIdentifier: cellReuseIdentifier)
        tableView.delegate = self
                tableView.dataSource = self
        self.tableView.tableFooterView = UIView(frame: .zero)
        tableView.backgroundColor = .red
        tableView.isScrollEnabled = false
        tableView.separatorColor = .white
        scrollView.addSubview(tableView)
        tableView.translatesAutoresizingMaskIntoConstraints = false
        tableView.widthAnchor.constraint(equalTo: scrollView.widthAnchor).isActive = true
        tableView.topAnchor.constraint(equalTo: scrollView.topAnchor).isActive = true
        tableView.heightAnchor.constraint(equalToConstant: 11 * 48).isActive = true
    }
    func addLogoutView() {
        let seperatorLine = SeperatorLineView()
        scrollView.addSubview(seperatorLine)
        seperatorLine.translatesAutoresizingMaskIntoConstraints = false
        seperatorLine.topAnchor.constraint(equalTo: tableView.bottomAnchor).isActive = true
        seperatorLine.widthAnchor.constraint(equalTo: scrollView.widthAnchor).isActive = true
        seperatorLine.heightAnchor.constraint(equalToConstant: 1).isActive = true
        let logOutTitle = UILabel()
        logOutTitle.text = "Logins"
        logOutTitle.font = UIFont.boldSystemFont(ofSize: 15)
        logOutTitle.textColor = .black
        logOutTitle.translatesAutoresizingMaskIntoConstraints = false
        logOutTitle.sizeToFit()
        scrollView.addSubview(logOutTitle)
        logOutTitle.topAnchor.constraint(equalTo: seperatorLine.bottomAnchor,constant: 15).isActive = true
        logOutTitle.leftAnchor.constraint(equalTo: scrollView.leftAnchor, constant: 15).isActive = true
        let addAccountButton = UIButton()
        addAccountButton.setTitle("Add Account", for: .normal)
        addAccountButton.setTitleColor(UIColor.blue, for: .normal)
        addAccountButton.backgroundColor = .clear
        addAccountButton.titleLabel?.font = UIFont.boldSystemFont(ofSize: 15)
        addAccountButton.translatesAutoresizingMaskIntoConstraints = false
        scrollView.addSubview(addAccountButton)
        addAccountButton.topAnchor.constraint(equalTo: logOutTitle.bottomAnchor, constant: 15).isActive = true
        addAccountButton.leftAnchor.constraint(equalTo: logOutTitle.leftAnchor).isActive = true
        addAccountButton.widthAnchor.constraint(equalTo: logOutTitle.widthAnchor).isActive = true
        addAccountButton.heightAnchor.constraint(equalTo: logOutTitle.heightAnchor, constant: 15).isActive = true
        let logOutButton = UIButton()
        logOutButton.setTitle("Log Out", for: .normal)
        logOutButton.setTitleColor(UIColor.blue, for: .normal)
        logOutButton.backgroundColor = .clear
        logOutButton.titleLabel?.font = UIFont.boldSystemFont(ofSize: 15)
        logOutButton.translatesAutoresizingMaskIntoConstraints = false
        logOutButton.titleLabel?.textAlignment = .left
        logOutButton.contentHorizontalAlignment = .left
        scrollView.addSubview(logOutButton)
        logOutButton.addTarget(self, action: #selector(pressedLogOut), for: .touchDown)
        logOutButton.topAnchor.constraint(equalTo: addAccountButton.bottomAnchor, constant: 15).isActive = true
        logOutButton.leftAnchor.constraint(equalTo: logOutTitle.leftAnchor).isActive = true
        logOutButton.widthAnchor.constraint(equalTo: logOutTitle.widthAnchor).isActive = true
        logOutButton.heightAnchor.constraint(equalTo: logOutTitle.heightAnchor).isActive = true
        let seperatorLine2 = SeperatorLineView()
        scrollView.addSubview(seperatorLine2)
        seperatorLine2.translatesAutoresizingMaskIntoConstraints = false
        seperatorLine2.topAnchor.constraint(equalTo: logOutButton.bottomAnchor, constant: 15).isActive = true
        seperatorLine2.widthAnchor.constraint(equalTo: scrollView.widthAnchor).isActive = true
        seperatorLine2.heightAnchor.constraint(equalToConstant: 1).isActive = true

    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.addSubview(scrollView)
        scrollView.contentSize = CGSize(width: self.view.frame.width, height: 1000)
        scrollView.backgroundColor = .white
        scrollView.translatesAutoresizingMaskIntoConstraints = false
        scrollView.heightAnchor.constraint(equalToConstant: 1000).isActive = true
        scrollView.widthAnchor.constraint(equalTo: view.widthAnchor, constant: 0).isActive = true
        scrollView.leftAnchor.constraint(equalTo: view.leftAnchor).isActive = true
        scrollView.rightAnchor.constraint(equalTo: view.rightAnchor).isActive = true
        setupTableView()
        addLogoutView()
    }

    @objc func pressedLogOut() {
        presenter.pressedLogOut()
    }
}

// MARK: - Extensions -

extension ProfileSettingsViewController: ProfileSettingsViewInterface {
}

extension ProfileSettingsViewController: UITableViewDelegate, UITableViewDataSource {
  
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 11
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell: UITableViewCell = (self.tableView.dequeueReusableCell(withIdentifier: cellReuseIdentifier) as UITableViewCell?)!
        // set the text from the data model
        cell.textLabel?.text = "Hey"
        return cell
    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 48
    }
    
    
}
