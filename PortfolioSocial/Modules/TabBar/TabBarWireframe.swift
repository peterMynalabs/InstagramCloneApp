//
//  TabBarWireframe.swift
//  PortfolioSocial
//
//  Created by Peter Shaburov on 11.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

//There is some fishy things happening with NaviagtionControllers that I havent yet fixed. This being the main archtecture of the whole app, What do you think about it?

//I shamelessly stole this (the enum) from a previous project I worked on, not sure wether this is the best way to do it

enum RootTabBarsItem : Int {
    
    case home = 0
       case search
       case addPost
       case activity
       case profile
    
    static var homeController: UIViewController?
    static var userSearchController: UIViewController?
    static var addPostController: UIViewController?
    static var activityController: UIViewController?
    static var profileController: UIViewController?
    
    static func initialize() {
        homeController = try! HomeFeedWireframe.init().viewController
        userSearchController = try! SearchViewWireframe.init().viewController
        addPostController = try! AddPostWireframe.init().viewController
        activityController = try! ActivityWireframe.init().viewController
        profileController = try! ProfileScreenWireframe.init().viewController
    }
    
    static func controllers() -> [UIViewController] {
            return [homeController!,
                    userSearchController!,
                    addPostController!,
                    activityController!,
                    profileController!]
        }
    
}
final class TabBarWireframe: BaseWireframe {

    // MARK: - Private properties -

    fileprivate weak var view: (UITabBarController)?
   
    // MARK: - Module setup -

    init() {
        RootTabBarsItem.initialize()

        let moduleViewController = TabBarViewController()
        super.init(viewController: moduleViewController)
        moduleViewController.viewControllers = RootTabBarsItem.controllers()
        moduleViewController.selectedIndex = 4
        let interactor = TabBarInteractor()
        let presenter = TabBarPresenter(view: moduleViewController, interactor: interactor, wireframe: self)
        moduleViewController.presenter = presenter
    }
    

}

// MARK: - Extensions -

extension TabBarWireframe: TabBarWireframeInterface {
    func transitionToLogIn() {
        let module = LoginWireframe()
        //module.viewController.modalPresentationStyle = .fullScreen
        navigationController?.pushWireframeWithoutAnimation(module)
    }
}
